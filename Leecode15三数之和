题目要求：
  给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。

  注意：答案中不可以包含重复的三元组。

  例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

  满足要求的三元组集合为：
  [
    [-1, 0, 1],
    [-1, -1, 2]
  ]

题目解法：
  python解法1（从两头往中间夹）参考题解中的解法：20191019
  class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        #双向往里夹的方法
        res = []
        nums.sort()
        # i=0
        for i in range(len(nums)-2):
            if i>0 and nums[i] == nums[i-1]:
                continue
            l=i+1
            r=len(nums)-1
            while l<r:
                s = nums[i] + nums[l] + nums[r]
                if s < 0:
                    l += 1
                elif s > 0:
                    r -= 1
                else:
                    res.append([nums[i],nums[l],nums[r]])
                #当有连续相同元素时，直接跳过，可以去重
                    while l < r and nums[l] == nums[l+1]:
                        l +=1
                    while l < r and nums[r] == nums[r-1]:
                        r -= 1
                    l+=1
                    r-=1
                   
        return res

参考题解：https://leetcode-cn.com/problems/3sum/solution/3sumpai-xu-shuang-zhi-zhen-yi-dong-by-jyd/
解法解析：（待续）


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/3sum
